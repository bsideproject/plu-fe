on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # checkout branch
      - uses: actions/checkout@v3

      # setup node
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # buildx 설정

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Docker build & push to push
        uses: docker/build-push-action@v2 # build-push-action 사용
        with:
          context: .
          push: true
          tags: ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_REPO}}:latest
          cache-from: type=gha # 여기서 gha 는 Guthub Actions 용 캐시를 의미합니다.
          cache-to: type=gha,mode=max

      # notification slack
      - uses: ravsamhq/notify-slack-action@v1
        if: ${{ failure() }}
        with:
          notification_title: '*execute ${{ github.job }} by ${{ github.actor }}*'
          notify_when: 'failure,warnings'
          icon_success: ':white_check_mark:'
          message_format: |-
            *workflow*: {workflow}
            *status*: {emoji} {status_message} 
            *branch*: <{repo_url}|{branch}>
            *commit*: <{commit_url}|{commit_sha}>
            *commit message*: ${{ github.event.head_commit.message }}
          status: ${{ job.status }}
          mention_users: 'U03KPURHXB8,U03L97BHFDX'
          mention_users_when: 'failure'
          footer: '<{run_url}|View Github Actions>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # deploy:
  #   needs: build
  #   name: Deploy
  #   runs-on: [self-hosted, label-go]
  #   steps:
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{secrets.DOCKERHUB_USERNAME}}
  #         password: ${{secrets.DOCKERHUB_TOKEN}}

  #     - name: Docker run
  #       run: |
  #         docker stop bside-11-02-frontend && docker rm bside-11-02-frontend && docker rmi ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_REPO}}:latest
  #         docker run -dit -p 80:3000 --name bside-11-02-frontend ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_REPO}}:latest
  #         docker rmi $(docker images --filter "dangling=true" -q --no-trunc)

  #     # notification slack
  #     - uses: ravsamhq/notify-slack-action@v1
  #       if: ${{ failure() }}
  #       with:
  #         notification_title: '*execute ${{ github.job }} by ${{ github.actor }}*'
  #         icon_success: ':white_check_mark:'
  #         message_format: |-
  #           *workflow*: {workflow}
  #           *status*: {emoji} {status_message}
  #           *branch*: <{repo_url}|{branch}>
  #           *commit*: <{commit_url}|{commit_sha}>
  #           *commit message*: ${{ github.event.head_commit.message }}
  #         status: ${{ job.status }}
  #         mention_users: 'U03KPURHXB8,U03L97BHFDX'
  #         mention_users_when: 'failure'
  #         footer: '<{run_url}|View Github Actions>'
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
